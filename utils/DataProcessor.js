export class DataProcessor {
    constructor() {}
  
    /**
     * üìå –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–∏–∑ localStorage –∏–ª–∏ input)
     * @param {Object} rawData - –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ (–∏–∑ localStorage –∏–ª–∏ input)
     * @returns {Object} –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
     */
    processData(rawData) {
      if (!rawData || typeof rawData !== "object") {
        console.warn("‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ DataProcessor:", rawData);
        return {};
      }
  
      // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const processedData = { ...rawData };
  
      // üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–∏—Å–ª–æ–≤—ã–µ –ø–æ–ª—è (price, discountedPrice)
      if (processedData.price) {
        processedData.price = this.cleanNumber(processedData.price);
      }
      if (processedData.discountedPrice) {
        processedData.discountedPrice = this.cleanNumber(processedData.discountedPrice);
      }
  
      // üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã (true / false)
      if (processedData.discounted) {
        processedData.discounted = this.cleanBoolean(processedData.discounted);
      }
  
      // üîπ –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫–∏ (—É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã)
      ["name", "description", "currency", "repeats"].forEach((field) => {
        if (processedData[field]) {
          processedData[field] = this.cleanString(processedData[field]);
        }
      });
  
      console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", processedData);
      return processedData;
    }
  
    /**
     * üìå –£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ
     */
    cleanString(value) {
      return typeof value === "string" ? value.trim() : value;
    }
  
    /**
     * üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
     */
    cleanNumber(value) {
      const num = parseFloat(value);
      return isNaN(num) ? value : num;
    }
  
    /**
     * üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ `true` / `false`
     */
    cleanBoolean(value) {
      return value === "on" || value === true;
    }
  }
  