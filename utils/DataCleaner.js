export class DataCleaner {
  constructor(options) {
    this.block = options.block; // –ë–ª–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ–º –æ—á–∏—â–∞—Ç—å –ø–æ–ª—è
    this.clickElement = options.clickElement; // –≠–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
  }

  clearFields() {
    if (!this.block) {
      console.warn("‚ö†Ô∏è DataCleaner: `block` –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
      return;
    }

    let inputs = this.block.querySelectorAll("input, textarea");

    inputs.forEach((input) => {
      input.value = "";
      if (input.type === "checkbox" || input.type === "radio") {
        const checkboxTrigger = input
          .closest("label")
          ?.querySelector(".discounted");
        if (checkboxTrigger && input.value === "") {
          input.checked ? checkboxTrigger.click() : "";
        }
      }
    });

    if (this.clickElement && !inputs) {
      console.log("üñ±Ô∏è DataCleaner: –∫–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏.");
      this.clickElement.click();
    }
    console.log(`‚úÖ DataCleaner: –æ—á–∏—â–µ–Ω–æ ${inputs.length} –ø–æ–ª–µ–π.`);
  }
}
