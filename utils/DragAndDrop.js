export class DragAndDrop {
  constructor() {
    this.init();
  }

  /**
   * üü¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
   */
  async init() {
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å data-dnd="true"
    const containers = document.querySelectorAll('[data-dnd="true"]');
    if (!containers.length) {
      console.warn("‚ö†Ô∏è DragAndDrop: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å data-dnd='true' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º DnD –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      containers.forEach((container) => {
        this.handleDragAndDrop(container);
      });
    }

    // üìå –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ `input[type="file"]` –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const fileInputs = document.querySelectorAll('input[type="file"]');

    if (!fileInputs.length) {
      console.warn("‚ö†Ô∏è –ü–æ–ª—è input[type='file'] –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –∫–∞–∂–¥–æ–º—É –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É input[type="file"]
      fileInputs.forEach((input) => {
        this.observeFileInput(input);
      });
    }
  }

  /**
   * üöÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ Drag and Drop (—ç–º—É–ª–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º)
   * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å data-dnd="true"
   */
  handleDragAndDrop(container) {
    const input = container
      .closest("[data-upload-wrapper]")
      ?.querySelector('input[type="file"]');
    if (!input) return;

    // üé® –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞
    const addDragOverClass = () => container.classList.add("drag-over");

    // üé® –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –∑–æ–Ω—ã
    const removeDragOverClass = () => container.classList.remove("drag-over");

    container.addEventListener("dragenter", (event) => {
      event.preventDefault();
      addDragOverClass();
    });

    container.addEventListener("dragover", (event) => {
      event.preventDefault();
      addDragOverClass();
    });

    container.addEventListener("dragleave", (event) => {
      event.preventDefault();
      removeDragOverClass();
    });

    container.addEventListener("drop", (event) => {
      event.preventDefault();
      removeDragOverClass();

      const file = event.dataTransfer.files[0];
      if (!file) return;

      console.log("üìÅ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ Drag & Drop:", file);

      // üü¢ –≠–º—É–ª–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –≤ input[type="file"]
      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(file);
      input.files = dataTransfer.files;

      // ‚úÖ –í—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ `change`, —á—Ç–æ–±—ã Webflow –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ñ–∞–π–ª
      input.dispatchEvent(new Event("change", { bubbles: true }));
    });
  }

  /**
   * üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ `change`
   * @param {HTMLInputElement} input - –ü–æ–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
   */
  observeFileInput(input) {
    console.log("‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ input[type='file'] –∑–∞–ø—É—â–µ–Ω–æ:", input);

    input.addEventListener("change", (event) => {
      if (input.files.length > 0) {
        const file = input.files[0]; // –ë–µ—Ä—ë–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        console.log("üìÇ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ change:", file);

        this.handleFile(file, input); // –ü–µ—Ä–µ–¥–∞—ë–º —Ñ–∞–π–ª –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É
      }
    });
  }

  /**
   * üéØ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
   * @param {HTMLElement} wrapper - –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä [data-upload-wrapper]
   * @param {boolean} isImage - `true`, –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏–Ω–∞—á–µ `false`
   */
  toggleFilePreview(wrapper, isImage) {
    const imageWrapper = wrapper.querySelector(".upload-image_wrapper");
    const fileNameWrapper = wrapper.querySelector(".file-name");

    if (!imageWrapper || !fileNameWrapper) return;

    if (isImage) {
      imageWrapper.classList.remove("hide");
      fileNameWrapper.classList.add("hide");
    } else {
      imageWrapper.classList.add("hide");
      fileNameWrapper.classList.remove("hide");
    }
  }

  /**
   * üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
   * @param {File} file - –ó–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
   * @param {HTMLElement} source - –ò—Å—Ç–æ—á–Ω–∏–∫ —Ñ–∞–π–ª–∞ (input[type="file"] –∏–ª–∏ DnD –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä)
   */
  handleFile(file, source) {
    console.log("üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞:", file, "–ò—Å—Ç–æ—á–Ω–∏–∫:", source);

    // üè∑Ô∏è –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–π `data-upload-wrapper`
    const wrapper = source.closest("[data-upload-wrapper]");
    if (!wrapper) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    const isImage = file.type.startsWith("image/");

    if (isImage) {
      // –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π URL –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const imageUrl = URL.createObjectURL(file);
      console.log("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:", imageUrl);

      // üè∑Ô∏è –ò—â–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º `data-upload-target`
      const img = wrapper.querySelector("[data-upload-target]");
      if (img) {
        img.src = imageUrl;
      } else {
        console.warn(
          "‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å data-upload-target –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤–Ω—É—Ç—Ä–∏ data-upload-wrapper."
        );
      }
    }

    // üü¢ –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    this.toggleFilePreview(wrapper, isImage);
  }
}
